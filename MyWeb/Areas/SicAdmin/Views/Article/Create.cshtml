@model MyWeb.Models.Article

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/SicAdmin/Views/Shared/_AdminLayout.cshtml";
}

@{string img = HttpUtility.UrlDecode(Request.QueryString["img"], System.Text.Encoding.BigEndianUnicode);
  string dt = DateTime.Now.ToString("G");
  }
<script src="~/Scripts/jquery-2.1.1.min.js"></script>
<script type="text/javascript">
    $(function () {
        $("#r").text("@img");
        $("#dt").text("@dt");
        $("#clk").text(1);
        $("#pid").text(1);
        
            $("#btnUpload").click(function () {
                $("#fileForm").submit();
            })
    })
    function selectSettingType() {
        if (document.getElementById("upload").style.display == 'none') {
            document.getElementById("upload").style.display = "block";
            document.getElementById("system").style.display = "none";
        } else {
            document.getElementById("system").style.display = "block";
            document.getElementById("upload").style.display = "none";
        }
    }//这个用来显示和隐藏上传按钮，主要是交互性会好点而已
    function isImageFileName(str) {
        var reg = /([0-9]{1,}.jpg)|([0-9]{1,}.gif)/;
        if (reg.test(str)) {
            return true;
        }
        return false;
    }//这个函数是判断返回的值是不是包含图片，因为后天返回值有几种，正确上传返回图片存储路径
    
</script>
<h2>Create</h2>
<p class="mb15"> 
          <img src="@img" id="upLoadImageShow" width="183" height="132" />
          <br />
          <a id="system" style="cursor: pointer;" onclick="selectSettingType()">选择上传图片</a>
      </p>
      @*<p class="mb15">*@
<div id="upload" class="cb mt10" ">

                <div id="upload_title" class="mt10">
                    <h4>选择本地图片上传</h4>
                    <span id="errorInfoSpan" class="red"></span>
                </div>

               @* <iframe name="hd" style="display: none;"></iframe>*@
                <form id="fileForm" method="post" action="@Url.Content("/Article/ImageUpLoad")" enctype="multipart/form-data" >
                    <input type="file" name="upImage"  class="mt10"  size="50" />
                    <input id="btnUpload" type="button" value="上传" />
                    <span class="gray">图片格式 jpg/gif 小于1M</span><br />
                </form>
    
    <iframe id="tar" name="tar" style="display:none">
    </iframe>
      </div>
@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    <fieldset>
        <legend>Article</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ArticleContent)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(s=>s.ArticleContent,new{@id="editor_id",@style="width:819px;height:400px;"})
            @Html.ValidationMessageFor(model => model.ArticleContent)
        </div>
        <div><p>转载请复制：（声明：本文系转载，转载目的在于分享传递有价值信息，并不代表本站赞同其观点。如涉及作品内容、版权和其它问题，请尽快与本站联系，我们将在第一时间删除相关内容！）</p></div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CoverImage)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.CoverImage, new {@id="r"})
            @Html.ValidationMessageFor(model => model.CoverImage)
    @*        @{
    MyWeb.Models.Article d = new MyWeb.Models.Article();
    d.CoverImage = img;
                }*@
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.PublisherID)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.PublisherID, new { @id="pid"})
            @Html.ValidationMessageFor(model => model.PublisherID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreatDate)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.CreatDate, new {@id="dt" })
            @Html.ValidationMessageFor(model => model.CreatDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ChangeDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ChangeDate)
            @Html.ValidationMessageFor(model => model.ChangeDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Source)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Source)
            @Html.ValidationMessageFor(model => model.Source)
        </div>

        
           <div class="editor-label">
            @Html.LabelFor(model => model.SourceUrl)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SourceUrl)
            @Html.ValidationMessageFor(model => model.SourceUrl)
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ClickTimes)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.ClickTimes, new { @id = "clk" })
            @Html.ValidationMessageFor(model => model.ClickTimes)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TypeID, "ArticleType")
        </div>
        <div class="editor-field">
            @Html.DropDownList("TypeID", String.Empty)
            @Html.ValidationMessageFor(model => model.TypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Label)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Label)
            @Html.ValidationMessageFor(model => model.Label)
        </div>

        @*<div class="editor-label">
            @Html.LabelFor(model => model.AgreeTimes)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AgreeTimes)
            @Html.ValidationMessageFor(model => model.AgreeTimes)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.Isdel)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Isdel)
            @Html.ValidationMessageFor(model => model.Isdel)
        </div>

        @*<div class="editor-label">
            @Html.LabelFor(model => model.Equipment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Equipment)
            @Html.ValidationMessageFor(model => model.Equipment)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.Sort)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Sort)
            @Html.ValidationMessageFor(model => model.Sort)
            
        </div>


        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@


